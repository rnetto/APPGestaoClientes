@page "/cadastrarcliente"

@inject ICliente _clientService
@inject NavigationManager navigation
<div class="container-fluid">
    <div class="toast-header">
        <h1>Cadastrar cliente</h1>
    </div>
    <div style="margin-top:15px">
        @if (!string.IsNullOrWhiteSpace(msg))
        {
            <p><em>@msg</em></p>
        }

        <ClienteForm ClienteFormDTO="@clienteFormDto" OnValidSubmit="SalvarCadastro"></ClienteForm>
    </div>
</div>

@code {
    private ClienteFormDTO clienteFormDto = new ClienteFormDTO();
    public string msg { get; set; }

    async Task SalvarCadastro()
    {
        if (clienteFormDto == null)
        {

            msg = "Erro ao realizar cadastro! Tente novamente.";
            StateHasChanged();
        }
        var cliente = new ClienteDTOPost()
        {
            Nome = clienteFormDto.Nome,
            CPF = clienteFormDto.CPF,
            Sexo = clienteFormDto.Sexo,
            SituacaoClienteId = clienteFormDto.IdSituacaoCliente,
            TipoClienteId = clienteFormDto.IdTipoCliente
        };

        var response = await _clientService.PostCliente(cliente);

        if (string.IsNullOrWhiteSpace(response))
        {
            msg = "Erro ao realizar cadastro! Tente novamente.";
            StateHasChanged();
        }
        else
        {
            msg = "Cadastro realizado com sucesso!";
            StateHasChanged();
            await Task.Delay(3000);
            navigation.NavigateTo("listarclientes");
        }
    }

}
